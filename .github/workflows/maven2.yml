name: Build and Tag Docker Image

on:
  push:
    branches:
      - main
      
jobs:
  build-and-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Package the project as a runnable jar file
        run: | 
          mvn -B package -DskipTests   
        
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: ${{ secrets.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

      - name: Build Tag and push Docker Image
        env:
          IMAGE_NAME: dsener.jfrog.io/dsener-docker/jfrog-docker-example-image:${{ github.run_number }}
        run: |
          pwd
          ls -la
          jf docker build -t $IMAGE_NAME .
          jf docker scan $IMAGE_NAME --format=json > scan_${{github.run_number}}.json
          jf docker push $IMAGE_NAME
          
      - name: Publish Build info With JFrog CLI
        env:
          # Generated and maintained by GitHub
          JFROG_CLI_BUILD_NAME: jfrog-docker-build-example
          # JFrog organization secret
          JFROG_CLI_BUILD_NUMBER : ${{ github.run_number }}
        run: |
          # Export the build name and build nuber
          # Collect environment variables for the build
          jf rt build-collect-env
          # Collect VCS details from git and add them to the build
          jf rt build-add-git
          # Publish build info
          jf rt build-publish

      - name: push xray image scan to github
        uses: GuillaumeFalourd/copy-push-files@v1
        with:
          source_files: scan_${{github.run_number}}.json
          remote_repository: https://github.com/idsener/spring-petclinic3
          access_token: ${{ secrets.GH_TOKEN }}


      
#        uses: github-actions-x/commit@v2.9
#        with:
#          github-token: ${{ secrets.GH_TOKEN }}
#          push-branch: 'master'
#          commit-message: 'publish'
#          force-add: 'true'
#          files:  scan_${{github.run_number}}.json
#          name: commiter name
#          email: my.github@email.com 




        
        

